os.loadAPI("apis/events")
os.loadAPI("apis/amber")

local function createClient()
	local client = amber.PackageClient.fromConfigurationPath(nil, {{type = "AmberServer"}})
	local installation = amber.PackageInstallation.new(nil, editHandler, function(progress) print(progress) end)
	return client, installation
end

function updatePackages(interactive)
	local editHandler
	if interactive then
		editHandler = function(file) shell.run("edit", "/" .. file) end
	end
	local client, installation = createClient()
	installation:updatePackages(client)
end

local function handlePackageUpdate(packageName)
	local client, installation = createClient()
	installation:updatePackages(client, {{name = packageName}})
end

-- TODO: This doesn't really belong here, but it's handy for now. Move to autostartup perhaps.
local function printSystemInfo()
	local label = os.getComputerLabel()
	local id = os.getComputerID()
	if label then
		print(string.format("Computer label: %s", label))
	end
	print(string.format("Computer ID: %i", id))
end

function initialize()
	net.registerMessageHandler("packageUpdateAvailable", handlePackageUpdate)

	events.registerHandler("char", function(evt, pressed)
		if pressed == "u" then
			updatePackages(true)
		end
		if pressed == "i" then
			printSystemInfo()
		end
	end)
end